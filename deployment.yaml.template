apiVersion: apps/v1
kind: Deployment
metadata:
  name: yourapplication-deployment
  namespace: yourapplication
spec:
  selector:
    matchLabels:
      app: yourapplication
  replicas: 1
  template:
    metadata:
      labels:
        app: yourapplication
        tier: web
    spec:
      containers:
      - name: yourapplication
        image: yourorganization/yourapplication:commit-${TRAVIS_COMMIT}
        ports:
        - containerPort: 8000
        env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: database-credentials
                key: url
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django-conf
                key: secret-key
          - name: ALLOWED_HOSTS
            value: yourapplication.yourorganization.gg
          - name: SOCIAL_AUTH_GITHUB_KEY
            valueFrom:
              secretKeyRef:
                name: github-oauth
                key: key
          - name: SOCIAL_AUTH_GITHUB_SECRET
            valueFrom:
              secretKeyRef:
                name: github-oauth
                key: secret
          - name: SERVER_NAME
            value: yourapplication.yourorganization.gg
          - name: PROTOCOL
            value: https://
          - name: GS_BUCKET_NAME
            value: league-sandbox-yourapplication-storage
          - name: GS_PROJECT_ID
            value: league-sandbox
          - name: GS_CREDENTIALS
            value: /secrets/cloud-storage/yourapplication-storage.service-account.json
          - name: GS_DEFAULT_ACL
            value: publicRead
        volumeMounts:
          - name: cloud-storage-credentials
            mountPath: /secrets/cloud-storage
            readOnly: true
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=league-sandbox:europe-north1:yourapplication-db=tcp:3306",
                  "-credential_file=/secrets/cloudsql/yourapplication-db-proxy.service-account.json"]
        securityContext:
          runAsUser: 2
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: cloud-storage-credentials
          secret:
            secretName: cloud-storage-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: yourapplication-backend
  namespace: yourapplication
  labels:
    app: yourapplication
spec:
  type: NodePort
  selector:
    app: yourapplication
    tier: web
  ports:
  - port: 8000
    targetPort: 8000
